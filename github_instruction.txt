Istruzioni:

-- Per committare un file da locale al repo github:
 - git add .  (oppure: git add namefile1.extension namefile2.extension ....)
 - git commit -m "desccription"
 - git push

-- Per clonare un progetto in locale creato in github:
 - entrare in una cartella dove si vuole clonare il progetto
 - git clone https://github.com/user/repositoryName
 - entrare nella cartella appena creata con il clone
 - lavorare e fare eventuali commit


 -- Per vedere lo status dei file locali rispetto a quelli committati:
  - git status

 -- Vedere le differenze
  - git diff

-- Se un file presenta conflitti dopo aver fatto il pull, aprire il file, fare il merge dei conflitti
	committarlo.

========= MERGE ===================

-- Merge (Pull) via github:
	Durante i merge (pull) il ramo nella sezione base è quel ramo sul quale verranno riversati i file del
	ramo nella sezione compare!
	[ base <- compare ]
	
	esempio:
	ramo [files] - nomi uguali file uguali
	
	siuazione iniziale:
	- r1 [ a b c ]
	- r2 [ a b d ]
	
	pull request - [base:r2      compare:r1] - r2 si tira i file di r1 
	merge pull request
	
	risultato dopo il pull:
	- r1 [ a b c ]
	- r2 [ a b c d ]

-- Merge via gitlab:
	Se nella pagina Merge Requests si trova scritto: "Request to merge A into B",
	alla fine del merge e alla correzione di eventuali conflitti questo è
	cià che si ottiene: (pagona Network) "Merge branch 'B' into 'A'" ovvero che
	il ramo 'B' è stato riversato nel ramo 'A'


-- SourceTree
Per creare un ramo D a partire da un altro ramo S, essere sicuri di essere posizionati sul ramo S.




-- Useful vim command:
	- dd delete line
	- :wq Write file to disk and quit the editor
	- :q! Quit 
	- a Append text following current cursor position
	- A Append text to the end of current line
	- i Insert text before the current cursor position
	- I Insert text at the beginning of the cursor line
	- /text search text in the file (press n to next occurence)
